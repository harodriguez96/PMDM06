{"version":3,"file":"src_app_pages_radio_radio_module_ts.js","mappings":"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","sources":["./src/app/components/mis-componentes.module.ts","./src/app/components/page-header/page-header.component.ts","./src/app/pages/radio/radio-routing.module.ts","./src/app/pages/radio/radio.module.ts","./src/app/pages/radio/radio.page.ts","./src/app/servicios/radio.service.ts"],"sourcesContent":["import { IonicModule } from '@ionic/angular';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PageHeaderComponent } from './page-header/page-header.component';\r\n\r\n// Incluimos el componente \"PageHeaderComponent\" y lo exportamos para que se pueda usar en otros módulos\r\n// Se importa IonicModule. Se podrá usar en todos los componentes de este módulo\r\n@NgModule({\r\n  declarations: [PageHeaderComponent],\r\n  imports: [\r\n    CommonModule, IonicModule\r\n  ],\r\n  exports: [PageHeaderComponent]\r\n})\r\nexport class MisComponentesModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-header',\r\n  templateUrl: './page-header.component.html',\r\n  styleUrls: ['./page-header.component.scss'],\r\n})\r\nexport class PageHeaderComponent implements OnInit {\r\n\r\n  // Se define el atributo \"titulo\" como entrada de componente\r\n  // Se le asignará un valor al crear el componente con el selector \"app-page-header\"\r\n  @Input() titulo: string = \"\";\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RadioPage } from './radio.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RadioPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RadioPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RadioPageRoutingModule } from './radio-routing.module';\n\nimport { RadioPage } from './radio.page';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MisComponentesModule } from 'src/app/components/mis-componentes.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RadioPageRoutingModule,\n    HttpClientModule,\n    MisComponentesModule\n  ],\n  declarations: [RadioPage]\n})\nexport class RadioPageModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { RadioService } from 'src/app/servicios/radio.service';\n\n\n\n@Component({\n  selector: 'app-radio',\n  templateUrl: './radio.page.html',\n  styleUrls: ['./radio.page.scss'],\n})\nexport class RadioPage implements OnInit {\n\n  stations: any[] = [];\n  countries: string[] = [];\n\n  country = null;\n\n  constructor(private http: HttpClient, private radio: RadioService) {}\n\n  ngOnInit() {\n    this.loadCountries();\n\n  }\n\n  loadCountries() {\n    this.radio.getCountries().subscribe({\n      next: (data: any[]) => {\n        this.countries = data.map(c => c.name);\n      },\n      error: err => {\n        console.error('Error al cargar países', err);\n      }\n    });\n  }\n  \n\n  selectCountry(name: string) {\n    this.country = name;\n    console.log(this.country);\n  \n    this.radio.loadStations(name).subscribe({\n      next: stations => {\n        this.stations = stations.slice(0, 10); // Limit to 10 stations here\n      },\n      error: err => {\n        console.error('Error al cargar estaciones', err);\n      }\n    });\n  }\n  play(station: any) {\n    this.radio.play(station.url_resolved);\n  }\n\n  stop() {\n    this.radio.stop();\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RadioService {\n\n  private audio = new Audio();\n  private apiUrl = 'https://de1.api.radio-browser.info/json/countries';\n\n  constructor(private http: HttpClient) { }\n  play(url: string) {\n    this.audio.src = url;\n    this.audio.load();\n    this.audio.play().catch(err => {\n      console.error('Error al reproducir:', err);\n    });\n  }\n\n  stop() {\n    this.audio.pause();\n    this.audio.currentTime = 0;\n  }\n  getCountries(){\n    return this.http.get(this.apiUrl);\n  }\n\n  loadStations(country: string) {\n    const url = `https://de1.api.radio-browser.info/json/stations/bycountry/${country}`;\n    return this.http.get<any[]>(url);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}